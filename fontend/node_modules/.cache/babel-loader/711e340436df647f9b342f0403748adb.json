{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from './reducers/cartReducers';\nimport { getProductDetails, getProductsReducer } from './reducers/productReducers';\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProductDetail: getProductDetails,\n  getProducts: getProductsReducer\n});\nconst middleware = [thunk];\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst INITIAL_STATE = {\n  cart: {\n    cartItems: cartFromLocalStorage\n  }\n};\nconst store = createStore(reducer, INITIAL_STATE, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/mb050/Desktop/tutorial/mern-shopping-yt-build/fontend/src/redux/store.js"],"names":["applyMiddleware","combineReducers","createStore","thunk","composeWithDevTools","cartReducer","getProductDetails","getProductsReducer","reducer","cart","getProductDetail","getProducts","middleware","cartFromLocalStorage","localStorage","getItem","JSON","parse","INITIAL_STATE","cartItems","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,4BAAtD;AACA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,IAAI,EAAEJ,WADsB;AAE5BK,EAAAA,gBAAgB,EAAEJ,iBAFU;AAG5BK,EAAAA,WAAW,EAAEJ;AAHe,CAAD,CAA/B;AAKA,MAAMK,UAAU,GAAG,CAACT,KAAD,CAAnB;AAEA,MAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,EAAvG;AACA,MAAMG,aAAa,GAAG;AAClBT,EAAAA,IAAI,EAAE;AACFU,IAAAA,SAAS,EAAEN;AADT;AADY,CAAtB;AAKA,MAAMO,KAAK,GAAGlB,WAAW,CACrBM,OADqB,EAErBU,aAFqB,EAGrBd,mBAAmB,CAACJ,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from './reducers/cartReducers';\nimport { getProductDetails, getProductsReducer } from './reducers/productReducers';\nconst reducer = combineReducers({\n    cart: cartReducer,\n    getProductDetail: getProductDetails,\n    getProducts: getProductsReducer\n})\nconst middleware = [thunk];\n\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst INITIAL_STATE = {\n    cart: {\n        cartItems: cartFromLocalStorage\n    }\n}\nconst store = createStore(\n    reducer,\n    INITIAL_STATE,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}