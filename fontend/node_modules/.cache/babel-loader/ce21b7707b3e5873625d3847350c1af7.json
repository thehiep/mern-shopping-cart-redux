{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from '../constants/productConstants';\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeProductDetail = () => dispatch => {\n  dispatch({\n    type: actionTypes.GET_PRODUCT_DETAILS_RESET\n  });\n};","map":{"version":3,"sources":["/Users/mb050/Desktop/tutorial/mern-shopping-yt-build/fontend/src/redux/actions/productActions.js"],"names":["axios","actionTypes","getProducts","dispatch","type","GET_PRODUCTS_REQUEST","data","get","GET_PRODUCTS_SUCCESS","payload","error","GET_PRODUCTS_FAIL","response","message","getProductDetails","id","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","removeProductDetail","GET_PRODUCT_DETAILS_RESET"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,+BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,KAAD,CAAR;AAGA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,WAAW,CAACO,oBADb;AAELC,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAXD,CAWE,OAAOI,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,WAAW,CAACU,iBADb;AAELF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAApE,GAA8EH,KAAK,CAACG;AAFxF,KAAD,CAAR;AAIH;AACJ,CAlBM;AAoBP,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACzD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,WAAW,CAACe;AADb,KAAD,CAAR;AAGA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAgBQ,EAAG,EAA9B,CAAvB;AAEAZ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,WAAW,CAACgB,2BADb;AAELR,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAXD,CAWE,OAAOI,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,WAAW,CAACiB,wBADb;AAELT,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAApE,GAA8EH,KAAK,CAACG;AAFxF,KAAD,CAAR;AAIH;AACJ,CAlBM;AAoBP,OAAO,MAAMM,mBAAmB,GAAG,MAAOhB,QAAD,IAAc;AACnDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACmB;AADb,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from '../constants/productConstants';\n\nexport const getProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_REQUEST\n        })\n        const { data } = await axios.get('/api/products');\n\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n        })\n        const { data } = await axios.get(`/api/products/${id}`);\n\n        dispatch({\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const removeProductDetail = () => (dispatch) => {\n    dispatch({\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\n    })\n}"]},"metadata":{},"sourceType":"module"}