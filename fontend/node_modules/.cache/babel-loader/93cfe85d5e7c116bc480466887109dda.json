{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      {\n        const item = action.payload;\n        const existItem = state.cartItems.find(x => x.product === item.product);\n        const cartItems = state.cartItems.map(x => x.product === existItem.product ? item : x);\n\n        if (existItem) {\n          return { ...state,\n            cartItems: cartItems\n          };\n        } else {\n          return { ...state,\n            cartItems: [...state.cartItems, item]\n          };\n        }\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      {\n        const cartItems = state.cartItems.filter(x => x.product !== action.payload);\n        return { ...state,\n          cartItems: cartItems\n        };\n      }\n\n    case actionTypes.CART_RESET:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mb050/Desktop/tutorial/mern-shopping-yt-build/fontend/src/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter","CART_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAW,CAACM,WAAjB;AAA8B;AAC1B,cAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AACA,cAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;AACA,cAAMT,SAAS,GAAGD,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE,CAAlB;;AACA,YAAIF,SAAJ,EAAe;AACX,iBAAO,EACH,GAAGP,KADA;AAEHC,YAAAA,SAAS,EAAEA;AAFR,WAAP;AAIH,SALD,MAKO;AACH,iBAAO,EACH,GAAGD,KADA;AAEHC,YAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFR,WAAP;AAKH;AACJ;;AACD,SAAKP,WAAW,CAACc,gBAAjB;AAAmC;AAC/B,cAAMX,SAAS,GAAGD,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAuBJ,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcR,MAAM,CAACI,OAAjD,CAAlB;AACA,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAEA;AAFR,SAAP;AAIH;;AACD,SAAKH,WAAW,CAACgB,UAAjB;AACI,aAAO,EACH,GAAGd,KADA;AAEHC,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ;AACI,aAAOD,KAAP;AA/BR;AAkCH,CAnCM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_TO_CART: {\n            const item = action.payload;\n            const existItem = state.cartItems.find(x => x.product === item.product);\n            const cartItems = state.cartItems.map(x => x.product === existItem.product ? item : x);\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: cartItems\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n\n                }\n            }\n        }\n        case actionTypes.REMOVE_FROM_CART: {\n            const cartItems = state.cartItems.filter(x => x.product !== action.payload);\n            return {\n                ...state,\n                cartItems: cartItems\n            }\n        }\n        case actionTypes.CART_RESET:\n            return {\n                ...state,\n                cartItems: []\n            }\n        default:\n            return state;\n\n    }\n}"]},"metadata":{},"sourceType":"module"}